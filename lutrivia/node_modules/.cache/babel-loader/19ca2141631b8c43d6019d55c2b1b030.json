{"ast":null,"code":"var _jsxFileName = \"/Users/fanqiangmeng/Development/React/lutrivia-react-dumbo-web-051319/lutrivia/src/Question.js\";\nimport React from 'react';\nimport App from './App';\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkAnswer = event => {\n      if (event.target.value === this.state.answer.toString()) {\n        console.log(\"Correct\");\n        event.target.style.backgroundColor = \"green\";\n        App.updateScore();\n      } else {\n        console.log(\"not Correct\");\n        event.target.style.backgroundColor = \"red\";\n      }\n    };\n\n    this.state = {\n      text: props.text,\n      answer: props.answer\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.text), React.createElement(\"button\", {\n      onClick: this.checkAnswer,\n      type: \"button\",\n      name: \"button\",\n      value: \"true\",\n      style: {\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"True\"), React.createElement(\"button\", {\n      onClick: this.checkAnswer,\n      type: \"button\",\n      name: \"button\",\n      value: \"false\",\n      style: {\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"False\"));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/fanqiangmeng/Development/React/lutrivia-react-dumbo-web-051319/lutrivia/src/Question.js"],"names":["React","App","Question","Component","constructor","props","checkAnswer","event","target","value","state","answer","toString","console","log","style","backgroundColor","updateScore","text","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;;AADmB,SAOnBC,WAPmB,GAOJC,KAAD,IAAW;AACvB,UAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,QAAlB,EAA3B,EAAyD;AACvDC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAP,QAAAA,KAAK,CAACC,MAAN,CAAaO,KAAb,CAAmBC,eAAnB,GAAqC,OAArC;AACAf,QAAAA,GAAG,CAACgB,WAAJ;AACD,OAJD,MAIO;AACLJ,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAP,QAAAA,KAAK,CAACC,MAAN,CAAaO,KAAb,CAAmBC,eAAnB,GAAqC,KAArC;AACD;AACF,KAhBkB;;AAEnB,SAAKN,KAAL,GAAa;AACTQ,MAAAA,IAAI,EAAEb,KAAK,CAACa,IADH;AAETP,MAAAA,MAAM,EAAEN,KAAK,CAACM;AAFL,KAAb;AAIC;;AAWDQ,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKd,KAAL,CAAWa,IAAf,CADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKZ,WAAtB;AAAmC,MAAA,IAAI,EAAC,QAAxC;AAAiD,MAAA,IAAI,EAAC,QAAtD;AAA+D,MAAA,KAAK,EAAC,MAArE;AAA4E,MAAA,KAAK,EAAE;AAACU,QAAAA,eAAe,EAAE;AAAlB,OAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,KAAKV,WAAtB;AAAmC,MAAA,IAAI,EAAC,QAAxC;AAAiD,MAAA,IAAI,EAAC,QAAtD;AAA+D,MAAA,KAAK,EAAC,OAArE;AAA6E,MAAA,KAAK,EAAE;AAACU,QAAAA,eAAe,EAAE;AAAlB,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF;AAOD;;AA1BoC;;AA4BvC,eAAed,QAAf","sourcesContent":["import React from 'react';\nimport App from './App'\n\nclass Question extends React.Component {\n  constructor(props) {\n  super(props)\n  this.state = {\n      text: props.text,\n      answer: props.answer\n    }\n  }\n  checkAnswer = (event) => {\n    if (event.target.value === this.state.answer.toString()) {\n      console.log(\"Correct\");\n      event.target.style.backgroundColor = \"green\"\n      App.updateScore()\n    } else {\n      console.log(\"not Correct\");\n      event.target.style.backgroundColor = \"red\"\n    }\n  }\n  render(){\n    return (\n      <div>\n        <p>{this.props.text}</p>\n        <button onClick={this.checkAnswer} type=\"button\" name=\"button\" value=\"true\" style={{backgroundColor: \"white\"}}>True</button>\n        <button onClick={this.checkAnswer} type=\"button\" name=\"button\" value=\"false\" style={{backgroundColor: \"white\"}}>False</button>\n      </div>\n    )\n  }\n}\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}