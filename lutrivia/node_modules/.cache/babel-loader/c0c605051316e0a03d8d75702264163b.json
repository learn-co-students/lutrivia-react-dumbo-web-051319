{"ast":null,"code":"var _jsxFileName = \"/home/joes/Development/mod-4/labs/lutrivia-react-dumbo-web-051319/lutrivia/src/App.js\";\nimport React from 'react';\nimport QuestionList from './QuestionList';\nimport SubmitScore from './SubmitScore';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateScore = () => {\n      // console.log(this)\n      let score = this.state.score;\n      score += 1;\n      this.setState({\n        score: score\n      }); // this.updateScoreInput()\n    };\n\n    this.returnScore = () => {\n      // debugger\n      return this.state.score;\n    };\n\n    this.refresh = () => {\n      window.location.reload();\n    };\n\n    this.state = {\n      score: 0\n    };\n  }\n\n  render() {\n    let questions = this.props.data.questions; // console.log(questions)\n    // debugger;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Lutrivia\"), React.createElement(\"button\", {\n      onClick: this.refresh,\n      Page: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"New Game\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Score: \", this.state.score), React.createElement(QuestionList, {\n      score: this.updateScore,\n      questions: questions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(SubmitScore, {\n      score: this.state.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/joes/Development/mod-4/labs/lutrivia-react-dumbo-web-051319/lutrivia/src/App.js"],"names":["React","QuestionList","SubmitScore","App","Component","constructor","props","updateScore","score","state","setState","returnScore","refresh","window","location","reload","render","questions","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,WAPmB,GAOL,MAAM;AAClB;AACA,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAvB;AACAA,MAAAA,KAAK,IAAI,CAAT;AACA,WAAKE,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAEA;AADK,OAAd,EAJkB,CAOlB;AACD,KAfkB;;AAAA,SAiBnBG,WAjBmB,GAiBL,MAAM;AAClB;AACA,aAAO,KAAKF,KAAL,CAAWD,KAAlB;AACD,KApBkB;;AAAA,SAsBnBI,OAtBmB,GAsBT,MAAM;AACdC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAxBkB;;AAEjB,SAAKN,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAqBDQ,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,KAAKX,KAAL,CAAWY,IAAX,CAAgBD,SAAhC,CADO,CAEP;AACA;;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKL,OAAtB;AAA+B,MAAA,IAAI,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKH,KAAL,CAAWD,KAAvB,CAHF,EAIE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE,KAAKD,WAA1B;AAAuC,MAAA,SAAS,EAAEU,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWD,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAzC+B;;AA4ClC,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport QuestionList from './QuestionList';\nimport SubmitScore from './SubmitScore';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      score: 0,\n    }\n  }\n\n  updateScore = () => {\n    // console.log(this)\n    let score = this.state.score\n    score += 1\n    this.setState({\n      score: score\n    })\n    // this.updateScoreInput()\n  }\n\n  returnScore = () => {\n    // debugger\n    return this.state.score\n  }\n\n  refresh = () => {\n    window.location.reload()\n  }\n\n  render() {\n    let questions = this.props.data.questions\n    // console.log(questions)\n    // debugger;\n    return (\n      <div>\n        <h1>Lutrivia</h1>\n        <button onClick={this.refresh} Page>New Game</button>\n        <h3>Score: {this.state.score}</h3>\n        <QuestionList score={this.updateScore} questions={questions}/>\n        <SubmitScore score={this.state.score}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}